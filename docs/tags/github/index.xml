<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>github on Pilar Laborda</title>
    <link>https://plabordab.github.io/portfolio_hugo/tags/github/</link>
    <description>Recent content in github on Pilar Laborda</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es</language><atom:link href="https://plabordab.github.io/portfolio_hugo/tags/github/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>git pull</title>
      <link>https://plabordab.github.io/portfolio_hugo/git_pull/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://plabordab.github.io/portfolio_hugo/git_pull/</guid>
      <description>El comando git pull se emplea para extraer y descargar contenido desde un repositorio remoto y actualizar al instante el repositorio local.
La fusión de cambios remotos de nivel superior en el repositorio local es una tarea habitual de los flujos de trabajo de colaboración basados en Git.
El comando git pull es, en realidad, una combinación de dos comandos, git fetch seguido de git merge.
En la primera etapa de la operación git pull ejecutará un git fetch en la rama local a la que apunta HEAD.</description>
    </item>
    
    <item>
      <title>git push</title>
      <link>https://plabordab.github.io/portfolio_hugo/git_push/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://plabordab.github.io/portfolio_hugo/git_push/</guid>
      <description>El comando git push se usa para cargar contenido del repositorio local a un repositorio remoto.
El envío es la forma de transferir confirmaciones desde tu repositorio local a un repositorio remoto. Es el equivalente a git fetch, pero mientras que al recuperar se importan las confirmaciones a ramas locales, al enviar estas se exportan a ramas remotas. Las ramas remotas se configuran mediante el comando git remote. Los envíos pueden sobrescribir los cambios, por lo que se debe tener cuidado a la hora de realizarlos.</description>
    </item>
    
    <item>
      <title>github</title>
      <link>https://plabordab.github.io/portfolio_hugo/git_info/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://plabordab.github.io/portfolio_hugo/git_info/</guid>
      <description>La plataforma de desarrollo más completa para crear, escalar y entregar software seguro. Codificación colaborativa Contribución rápida a proyectos con configuración automática del entorno.
Seguridad de visión de los cambios de interés.
Posibilidad de creación de una comunidad en torno a su código.
Automatización y CI/CD Automatización de CI/CD, pruebas, planificación, gestión de proyectos, etiquetado de problemas, aprobaciones, incorporación y más.
Estandación y escalado
Las mejores prácticas, la seguridad y el cumplimiento en toda la organización.</description>
    </item>
    
    <item>
      <title>Vinculación a git</title>
      <link>https://plabordab.github.io/portfolio_hugo/git_init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://plabordab.github.io/portfolio_hugo/git_init/</guid>
      <description>Repositorio local y repositorio remoto Los repositorios remotos son versiones del proyecto hospedadas en Internet. Colaborar con otras personas implica gestionar estos repositorios enviando y recogiendo datos de ellos cuando sea necesario compartir el trabajo.
Las operaciones básicas entre un repositorio remoto y uno local son:
push: Envía los cambios validados de la rama local a la rama remota.
pull: Descarga y combina automáticamente la rama remota con la rama actual.</description>
    </item>
    
  </channel>
</rss>
